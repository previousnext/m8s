---
version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/previousnext/m8s
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS
      - run: go get github.com/jstemmer/go-junit-report
      - run:
          name: Run unit tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test | tee ${TEST_RESULTS}/go-test.out
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
  lint:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/previousnext/m8s
    steps:
      - checkout
      - run: go get github.com/golang/lint/golint
      - run:
          name: Run linting
          command: make lint
  build:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/previousnext/m8s
    steps:
      - checkout
      - run: go get github.com/mitchellh/gox
      - run:
          name: Compile binaries
          command: make build
      - persist_to_workspace:
          root: .
          paths:
            - bin
  release:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/previousnext/m8s
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: go get github.com/tcnksm/ghr
      - run:
          name: Push release binary to github
          command: ls -l ./bin

workflows:
  version: 2
  test:
    jobs:
      - lint
      - test
  release:
    jobs:
      - lint
      - test
      - build
      - release:
          requires:
            - lint
            - test
            - build
          filters:
            tags:
              # Match tags starting with v and a number. eg v1.0.0
              only: /^v[0-9].*/
