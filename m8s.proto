syntax = "proto3";

package m8s;

service m8s {
    rpc Create (CreateRequest) returns (stream CreateResponse) {}
    rpc Step (StepRequest) returns (stream StepResponse) {}
    rpc Describe (DescribeRequest) returns (DescribeResponse) {}
}

// Credentials is used for authenicating with the PR service.
message Credentials {
    string Token = 1;
}

// BuildRequest is used for submitting a new build.
message CreateRequest {
    Credentials Credentials = 1;
    Metadata Metadata = 2;
    Compose Compose = 3;
    GitCheckout GitCheckout = 4;
    repeated Init Steps = 5;
}

// Metadata is high level information about the build.
message Metadata {
  string Name = 1;
  repeated Annotation Annotations = 2;
  repeated string Domains = 3;
  BasicAuth BasicAuth = 4;
  string Retention = 5;
}

// Annotation provides information about where the environment was triggered.
message Annotation {
    string Name = 1;
    string Value = 2;
}

message BasicAuth {
    string User = 1;
    string Pass = 2;
}

// GitCheckout is the details required to checkout the codebase.
message GitCheckout {
    // The repository we are cloning:
    // * https://github.com/owner/repo.git
    // * https://<token>:x-oauth-basic@github.com/owner/repo.git
    string Repository = 1;
    string Revision = 2;
}

// Compose is our environment data, marshalled from a docker compose file.
message Compose {
  repeated ComposeService Services = 1;
}

// ComposeService is a container defintion, which we will use to build a pod.
message ComposeService {
    string Name = 1;
    string Image = 2;
    Resource Limits = 3;
    Resource Reservations = 4;
    repeated string Volumes = 5;
    repeated string Ports = 6;
    repeated string Environment = 7;
    repeated string Tmpfs = 8;
    repeated string Capabilities = 9;
    repeated string Entrypoint = 10;
    repeated string Extrahosts = 11;
    string Type = 12;
}

// Resource is used for setting CPU and Memory of the build.
message Resource {
    string CPU = 1;
    string Memory = 2;
}

// BuildResponse is a streamed response used for printing build output and status.
message CreateResponse {
  string Message = 1;
}

// StepRequest is our command being send to the remote environment.
message StepRequest {
    Credentials Credentials = 1;
    string Name = 2;
    string Container = 3;
    string Command = 4;
}

// StepResponse is a streamed response used to return output from the commands on the remove environment.
message StepResponse {
    string Message = 1;
}

// DescribeRequest asks for an Environment which has already been deployed.
message DescribeRequest {
    Credentials Credentials = 1;
    string Name = 2;
}

// DescribeResponse responds with an Environment.
message DescribeResponse {
    string Namespace = 1;
    string Name = 2;
    repeated string Domains = 3;
    repeated string Containers = 4;
    string SSH = 5;
}

// DescribeRequest asks for all the Environments.
message ListRequest {
    Credentials Credentials = 1;
}

message Init {
    string Name = 1;
    string Image = 2;
    repeated string Steps = 3;
    Resource Limits = 4;
    Resource Reservations = 5;
    repeated string Volumes = 6;
}
